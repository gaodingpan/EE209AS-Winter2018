# 1 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.cpp"
# 1 "C:\\Users\\dingg\\ECLIPS~1\\EE209A~1\\Receive\\erika//"
# 1 "<built-in>"
# 1 "<command-line>"
# 1 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.cpp"
# 22 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.cpp"
# 1 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.h" 1
# 26 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.h"
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h" 1
# 48 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
# 1 "c:\\progra~2\\arduino\\hardware\\tools\\avr\\lib\\gcc\\avr\\4.9.2\\include\\stddef.h" 1 3 4
# 212 "c:\\progra~2\\arduino\\hardware\\tools\\avr\\lib\\gcc\\avr\\4.9.2\\include\\stddef.h" 3 4
typedef unsigned int size_t;
# 49 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h" 2







extern "C" {
# 70 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
typedef struct {
 int quot;
 int rem;
} div_t;


typedef struct {
 long quot;
 long rem;
} ldiv_t;


typedef int (*__compar_fn_t)(const void *, const void *);
# 116 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern void abort(void) __attribute__((__noreturn__));




extern int abs(int __i) __attribute__((__const__));
# 130 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern long labs(long __i) __attribute__((__const__));
# 153 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern void *bsearch(const void *__key, const void *__base, size_t __nmemb,
       size_t __size, int (*__compar)(const void *, const void *));







extern div_t div(int __num, int __denom) __asm__("__divmodhi4") __attribute__((__const__));





extern ldiv_t ldiv(long __num, long __denom) __asm__("__divmodsi4") __attribute__((__const__));
# 185 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern void qsort(void *__base, size_t __nmemb, size_t __size,
    __compar_fn_t __compar);
# 218 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern long strtol(const char *__nptr, char **__endptr, int __base);
# 252 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern unsigned long strtoul(const char *__nptr, char **__endptr, int __base);
# 264 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern long atol(const char *__s) __attribute__((__pure__));
# 276 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern int atoi(const char *__s) __attribute__((__pure__));
# 288 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern void exit(int __status) __attribute__((__noreturn__));
# 300 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern void *malloc(size_t __size) __attribute__((__malloc__));






extern void free(void *__ptr);




extern size_t __malloc_margin;




extern char *__malloc_heap_start;




extern char *__malloc_heap_end;






extern void *calloc(size_t __nele, size_t __size) __attribute__((__malloc__));
# 348 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern void *realloc(void *__ptr, size_t __size) __attribute__((__malloc__));

extern double strtod(const char *__nptr, char **__endptr);
# 361 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern double atof(const char *__nptr);
# 383 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern int rand(void);



extern void srand(unsigned int __seed);






extern int rand_r(unsigned long *__ctx);
# 428 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern __inline__ __attribute__((__gnu_inline__))
char *itoa (int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__itoa (int, char *, int);
 return __itoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__itoa_ncheck (int, char *, unsigned char);
 return __itoa_ncheck (__val, __s, __radix);
    }
}
# 473 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern __inline__ __attribute__((__gnu_inline__))
char *ltoa (long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__ltoa (long, char *, int);
 return __ltoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__ltoa_ncheck (long, char *, unsigned char);
 return __ltoa_ncheck (__val, __s, __radix);
    }
}
# 516 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern __inline__ __attribute__((__gnu_inline__))
char *utoa (unsigned int __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__utoa (unsigned int, char *, int);
 return __utoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__utoa_ncheck (unsigned int, char *, unsigned char);
 return __utoa_ncheck (__val, __s, __radix);
    }
}
# 558 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern __inline__ __attribute__((__gnu_inline__))
char *ultoa (unsigned long __val, char *__s, int __radix)
{
    if (!__builtin_constant_p (__radix)) {
 extern char *__ultoa (unsigned long, char *, int);
 return __ultoa (__val, __s, __radix);
    } else if (__radix < 2 || __radix > 36) {
 *__s = 0;
 return __s;
    } else {
 extern char *__ultoa_ncheck (unsigned long, char *, unsigned char);
 return __ultoa_ncheck (__val, __s, __radix);
    }
}
# 590 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern long random(void);




extern void srandom(unsigned long __seed);







extern long random_r(unsigned long *__ctx);
# 649 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern char *dtostre(double __val, char *__s, unsigned char __prec,
       unsigned char __flags);
# 666 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern char *dtostrf(double __val, signed char __width,
                     unsigned char __prec, char *__s);
# 685 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdlib.h"
extern int atexit(void (*)(void));
extern int system (const char *);
extern char *getenv (const char *);



}
# 27 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.h" 2
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h" 1
# 46 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
# 1 "c:\\progra~2\\arduino\\hardware\\tools\\avr\\lib\\gcc\\avr\\4.9.2\\include\\stddef.h" 1 3 4
# 47 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h" 2
# 58 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern "C" {
# 125 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern int ffs(int __val) __attribute__((__const__));





extern int ffsl(long __val) __attribute__((__const__));





__extension__ extern int ffsll(long long __val) __attribute__((__const__));
# 150 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern void *memccpy(void *, const void *, int, size_t);
# 162 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern void *memchr(const void *, int, size_t) __attribute__((__pure__));
# 180 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern int memcmp(const void *, const void *, size_t) __attribute__((__pure__));
# 191 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern void *memcpy(void *, const void *, size_t);
# 203 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern void *memmem(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 213 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern void *memmove(void *, const void *, size_t);
# 225 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern void *memrchr(const void *, int, size_t) __attribute__((__pure__));
# 235 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern void *memset(void *, int, size_t);
# 248 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strcat(char *, const char *);
# 262 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strchr(const char *, int) __attribute__((__pure__));
# 274 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strchrnul(const char *, int) __attribute__((__pure__));
# 287 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern int strcmp(const char *, const char *) __attribute__((__pure__));
# 305 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strcpy(char *, const char *);
# 320 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern int strcasecmp(const char *, const char *) __attribute__((__pure__));
# 333 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strcasestr(const char *, const char *) __attribute__((__pure__));
# 344 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern size_t strcspn(const char *__s, const char *__reject) __attribute__((__pure__));
# 364 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strdup(const char *s1);
# 377 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern size_t strlcat(char *, const char *, size_t);
# 388 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern size_t strlcpy(char *, const char *, size_t);
# 399 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern size_t strlen(const char *) __attribute__((__pure__));
# 411 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strlwr(char *);
# 422 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strncat(char *, const char *, size_t);
# 434 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern int strncmp(const char *, const char *, size_t) __attribute__((__pure__));
# 449 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strncpy(char *, const char *, size_t);
# 464 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern int strncasecmp(const char *, const char *, size_t) __attribute__((__pure__));
# 478 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern size_t strnlen(const char *, size_t) __attribute__((__pure__));
# 491 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strpbrk(const char *__s, const char *__accept) __attribute__((__pure__));
# 505 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strrchr(const char *, int) __attribute__((__pure__));
# 515 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strrev(char *);
# 533 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strsep(char **, const char *);
# 544 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern size_t strspn(const char *__s, const char *__accept) __attribute__((__pure__));
# 557 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strstr(const char *, const char *) __attribute__((__pure__));
# 576 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strtok(char *, const char *);
# 593 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strtok_r(char *, const char *, char **);
# 606 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/string.h"
extern char *strupr(char *);



extern int strcoll(const char *s1, const char *s2);
extern char *strerror(int errnum);
extern size_t strxfrm(char *dest, const char *src, size_t n);



}
# 28 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.h" 2
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/ctype.h" 1
# 48 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/ctype.h"
extern "C" {
# 74 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/ctype.h"
extern int isalnum(int __c) __attribute__((__const__));






extern int isalpha(int __c) __attribute__((__const__));






extern int isascii(int __c) __attribute__((__const__));





extern int isblank(int __c) __attribute__((__const__));





extern int iscntrl(int __c) __attribute__((__const__));





extern int isdigit(int __c) __attribute__((__const__));





extern int isgraph(int __c) __attribute__((__const__));





extern int islower(int __c) __attribute__((__const__));





extern int isprint(int __c) __attribute__((__const__));






extern int ispunct(int __c) __attribute__((__const__));







extern int isspace(int __c) __attribute__((__const__));





extern int isupper(int __c) __attribute__((__const__));






extern int isxdigit(int __c) __attribute__((__const__));
# 173 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/ctype.h"
extern int toascii(int __c) __attribute__((__const__));





extern int tolower(int __c) __attribute__((__const__));





extern int toupper(int __c) __attribute__((__const__));




}
# 29 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.h" 2
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h" 1
# 88 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/inttypes.h" 1
# 37 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/inttypes.h"
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdint.h" 1
# 125 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdint.h"
typedef signed int int8_t __attribute__((__mode__(__QI__)));
typedef unsigned int uint8_t __attribute__((__mode__(__QI__)));
typedef signed int int16_t __attribute__ ((__mode__ (__HI__)));
typedef unsigned int uint16_t __attribute__ ((__mode__ (__HI__)));
typedef signed int int32_t __attribute__ ((__mode__ (__SI__)));
typedef unsigned int uint32_t __attribute__ ((__mode__ (__SI__)));

typedef signed int int64_t __attribute__((__mode__(__DI__)));
typedef unsigned int uint64_t __attribute__((__mode__(__DI__)));
# 146 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdint.h"
typedef int16_t intptr_t;




typedef uint16_t uintptr_t;
# 163 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdint.h"
typedef int8_t int_least8_t;




typedef uint8_t uint_least8_t;




typedef int16_t int_least16_t;




typedef uint16_t uint_least16_t;




typedef int32_t int_least32_t;




typedef uint32_t uint_least32_t;







typedef int64_t int_least64_t;






typedef uint64_t uint_least64_t;
# 217 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdint.h"
typedef int8_t int_fast8_t;




typedef uint8_t uint_fast8_t;




typedef int16_t int_fast16_t;




typedef uint16_t uint_fast16_t;




typedef int32_t int_fast32_t;




typedef uint32_t uint_fast32_t;







typedef int64_t int_fast64_t;






typedef uint64_t uint_fast64_t;
# 277 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/stdint.h"
typedef int64_t intmax_t;




typedef uint64_t uintmax_t;
# 38 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/inttypes.h" 2
# 77 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/inttypes.h"
typedef int32_t int_farptr_t;



typedef uint32_t uint_farptr_t;
# 89 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h" 2
# 1 "c:\\progra~2\\arduino\\hardware\\tools\\avr\\lib\\gcc\\avr\\4.9.2\\include\\stddef.h" 1 3 4
# 90 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h" 2
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 1
# 99 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h"
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/sfr_defs.h" 1
# 100 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 2
# 272 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h"
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/iom328p.h" 1
# 273 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 2
# 627 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h"
# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/portpins.h" 1
# 628 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 2

# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/common.h" 1
# 630 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 2

# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/version.h" 1
# 632 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 2






# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/fuse.h" 1
# 239 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/fuse.h"
typedef struct
{
    unsigned char low;
    unsigned char high;
    unsigned char extended;
} __fuse_t;
# 639 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 2


# 1 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/lock.h" 1
# 642 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/io.h" 2
# 91 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h" 2
# 116 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern "C" {
# 1158 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern const void * memchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1172 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int memcmp_P(const void *, const void *, size_t) __attribute__((__pure__));






extern void *memccpy_P(void *, const void *, int __val, size_t);
# 1188 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern void *memcpy_P(void *, const void *, size_t);






extern void *memmem_P(const void *, size_t, const void *, size_t) __attribute__((__pure__));
# 1207 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern const void * memrchr_P(const void *, int __val, size_t __len) __attribute__((__const__));
# 1217 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strcat_P(char *, const char *);
# 1233 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern const char * strchr_P(const char *, int __val) __attribute__((__const__));
# 1245 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern const char * strchrnul_P(const char *, int __val) __attribute__((__const__));
# 1258 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strcmp_P(const char *, const char *) __attribute__((__pure__));
# 1268 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strcpy_P(char *, const char *);
# 1285 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strcasecmp_P(const char *, const char *) __attribute__((__pure__));






extern char *strcasestr_P(const char *, const char *) __attribute__((__pure__));
# 1305 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strcspn_P(const char *__s, const char * __reject) __attribute__((__pure__));
# 1321 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strlcat_P (char *, const char *, size_t );
# 1334 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strlcpy_P (char *, const char *, size_t );
# 1346 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strnlen_P(const char *, size_t) __attribute__((__const__));
# 1357 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strncmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1376 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strncasecmp_P(const char *, const char *, size_t) __attribute__((__pure__));
# 1387 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strncat_P(char *, const char *, size_t);
# 1401 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strncpy_P(char *, const char *, size_t);
# 1416 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strpbrk_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1427 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern const char * strrchr_P(const char *, int __val) __attribute__((__const__));
# 1447 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strsep_P(char **__sp, const char * __delim);
# 1460 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strspn_P(const char *__s, const char * __accept) __attribute__((__pure__));
# 1474 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strstr_P(const char *, const char *) __attribute__((__pure__));
# 1496 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strtok_P(char *__s, const char * __delim);
# 1516 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strtok_rP(char *__s, const char * __delim, char **__last);
# 1529 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strlen_PF(uint_farptr_t src) __attribute__((__const__));
# 1545 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strnlen_PF(uint_farptr_t src, size_t len) __attribute__((__const__));
# 1560 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern void *memcpy_PF(void *dest, uint_farptr_t src, size_t len);
# 1575 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strcpy_PF(char *dest, uint_farptr_t src);
# 1595 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strncpy_PF(char *dest, uint_farptr_t src, size_t len);
# 1611 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strcat_PF(char *dest, uint_farptr_t src);
# 1632 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strlcat_PF(char *dst, uint_farptr_t src, size_t siz);
# 1649 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strncat_PF(char *dest, uint_farptr_t src, size_t len);
# 1665 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strcmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1682 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strncmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1698 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strcasecmp_PF(const char *s1, uint_farptr_t s2) __attribute__((__pure__));
# 1716 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int strncasecmp_PF(const char *s1, uint_farptr_t s2, size_t n) __attribute__((__pure__));
# 1732 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern char *strstr_PF(const char *s1, uint_farptr_t s2);
# 1744 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t strlcpy_PF(char *dst, uint_farptr_t src, size_t siz);
# 1760 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern int memcmp_PF(const void *, uint_farptr_t, size_t) __attribute__((__pure__));
# 1779 "C:\\PROGRA~2\\Arduino/hardware/arduino/avr/cores/arduino/avr/pgmspace.h"
extern size_t __strlen_P(const char *) __attribute__((__const__));
__attribute__((__always_inline__)) static __inline__ size_t strlen_P(const char * s);
static __inline__ size_t strlen_P(const char *s) {
  return __builtin_constant_p(__builtin_strlen(s))
     ? __builtin_strlen(s) : __strlen_P(s);
}



}
# 30 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.h" 2







class __FlashStringHelper;




class StringSumHelper;


class String
{



 typedef void (String::*StringIfHelperType)() const;
 void StringIfHelper() const {}

public:





 String(const char *cstr = "");
 String(const String &str);
 String(const __FlashStringHelper *str);

 String(String &&rval);
 String(StringSumHelper &&rval);

 explicit String(char c);
 explicit String(unsigned char, unsigned char base=10);
 explicit String(int, unsigned char base=10);
 explicit String(unsigned int, unsigned char base=10);
 explicit String(long, unsigned char base=10);
 explicit String(unsigned long, unsigned char base=10);
 explicit String(float, unsigned char decimalPlaces=2);
 explicit String(double, unsigned char decimalPlaces=2);
 ~String(void);





 unsigned char reserve(unsigned int size);
 inline unsigned int length(void) const {return len;}




 String & operator = (const String &rhs);
 String & operator = (const char *cstr);
 String & operator = (const __FlashStringHelper *str);

 String & operator = (String &&rval);
 String & operator = (StringSumHelper &&rval);







 unsigned char concat(const String &str);
 unsigned char concat(const char *cstr);
 unsigned char concat(char c);
 unsigned char concat(unsigned char c);
 unsigned char concat(int num);
 unsigned char concat(unsigned int num);
 unsigned char concat(long num);
 unsigned char concat(unsigned long num);
 unsigned char concat(float num);
 unsigned char concat(double num);
 unsigned char concat(const __FlashStringHelper * str);



 String & operator += (const String &rhs) {concat(rhs); return (*this);}
 String & operator += (const char *cstr) {concat(cstr); return (*this);}
 String & operator += (char c) {concat(c); return (*this);}
 String & operator += (unsigned char num) {concat(num); return (*this);}
 String & operator += (int num) {concat(num); return (*this);}
 String & operator += (unsigned int num) {concat(num); return (*this);}
 String & operator += (long num) {concat(num); return (*this);}
 String & operator += (unsigned long num) {concat(num); return (*this);}
 String & operator += (float num) {concat(num); return (*this);}
 String & operator += (double num) {concat(num); return (*this);}
 String & operator += (const __FlashStringHelper *str){concat(str); return (*this);}

 friend StringSumHelper & operator + (const StringSumHelper &lhs, const String &rhs);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, const char *cstr);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, char c);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, unsigned char num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, int num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, unsigned int num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, long num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, unsigned long num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, float num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, double num);
 friend StringSumHelper & operator + (const StringSumHelper &lhs, const __FlashStringHelper *rhs);


 operator StringIfHelperType() const { return buffer ? &String::StringIfHelper : 0; }
 int compareTo(const String &s) const;
 unsigned char equals(const String &s) const;
 unsigned char equals(const char *cstr) const;
 unsigned char operator == (const String &rhs) const {return equals(rhs);}
 unsigned char operator == (const char *cstr) const {return equals(cstr);}
 unsigned char operator != (const String &rhs) const {return !equals(rhs);}
 unsigned char operator != (const char *cstr) const {return !equals(cstr);}
 unsigned char operator < (const String &rhs) const;
 unsigned char operator > (const String &rhs) const;
 unsigned char operator <= (const String &rhs) const;
 unsigned char operator >= (const String &rhs) const;
 unsigned char equalsIgnoreCase(const String &s) const;
 unsigned char startsWith( const String &prefix) const;
 unsigned char startsWith(const String &prefix, unsigned int offset) const;
 unsigned char endsWith(const String &suffix) const;


 char charAt(unsigned int index) const;
 void setCharAt(unsigned int index, char c);
 char operator [] (unsigned int index) const;
 char& operator [] (unsigned int index);
 void getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index=0) const;
 void toCharArray(char *buf, unsigned int bufsize, unsigned int index=0) const
  { getBytes((unsigned char *)buf, bufsize, index); }
 const char* c_str() const { return buffer; }
 char* begin() { return buffer; }
 char* end() { return buffer + length(); }
 const char* begin() const { return c_str(); }
 const char* end() const { return c_str() + length(); }


 int indexOf( char ch ) const;
 int indexOf( char ch, unsigned int fromIndex ) const;
 int indexOf( const String &str ) const;
 int indexOf( const String &str, unsigned int fromIndex ) const;
 int lastIndexOf( char ch ) const;
 int lastIndexOf( char ch, unsigned int fromIndex ) const;
 int lastIndexOf( const String &str ) const;
 int lastIndexOf( const String &str, unsigned int fromIndex ) const;
 String substring( unsigned int beginIndex ) const { return substring(beginIndex, len); };
 String substring( unsigned int beginIndex, unsigned int endIndex ) const;


 void replace(char find, char replace);
 void replace(const String& find, const String& replace);
 void remove(unsigned int index);
 void remove(unsigned int index, unsigned int count);
 void toLowerCase(void);
 void toUpperCase(void);
 void trim(void);


 long toInt(void) const;
 float toFloat(void) const;
 double toDouble(void) const;

protected:
 char *buffer;
 unsigned int capacity;
 unsigned int len;
protected:
 void init(void);
 void invalidate(void);
 unsigned char changeBuffer(unsigned int maxStrLen);
 unsigned char concat(const char *cstr, unsigned int length);


 String & copy(const char *cstr, unsigned int length);
 String & copy(const __FlashStringHelper *pstr, unsigned int length);

 void move(String &rhs);

};

class StringSumHelper : public String
{
public:
 StringSumHelper(const String &s) : String(s) {}
 StringSumHelper(const char *p) : String(p) {}
 StringSumHelper(char c) : String(c) {}
 StringSumHelper(unsigned char num) : String(num) {}
 StringSumHelper(int num) : String(num) {}
 StringSumHelper(unsigned int num) : String(num) {}
 StringSumHelper(long num) : String(num) {}
 StringSumHelper(unsigned long num) : String(num) {}
 StringSumHelper(float num) : String(num) {}
 StringSumHelper(double num) : String(num) {}
};
# 23 "C:\\PROGRA~2\\Arduino\\hardware\\arduino\\avr\\cores\\arduino\\WString.cpp" 2





String::String(const char *cstr)
{
 init();
 if (cstr) copy(cstr, strlen(cstr));
}

String::String(const String &value)
{
 init();
 *this = value;
}

String::String(const __FlashStringHelper *pstr)
{
 init();
 *this = pstr;
}


String::String(String &&rval)
{
 init();
 move(rval);
}
String::String(StringSumHelper &&rval)
{
 init();
 move(rval);
}


String::String(char c)
{
 init();
 char buf[2];
 buf[0] = c;
 buf[1] = 0;
 *this = buf;
}

String::String(unsigned char value, unsigned char base)
{
 init();
 char buf[1 + 8 * sizeof(unsigned char)];
 utoa(value, buf, base);
 *this = buf;
}

String::String(int value, unsigned char base)
{
 init();
 char buf[2 + 8 * sizeof(int)];
 itoa(value, buf, base);
 *this = buf;
}

String::String(unsigned int value, unsigned char base)
{
 init();
 char buf[1 + 8 * sizeof(unsigned int)];
 utoa(value, buf, base);
 *this = buf;
}

String::String(long value, unsigned char base)
{
 init();
 char buf[2 + 8 * sizeof(long)];
 ltoa(value, buf, base);
 *this = buf;
}

String::String(unsigned long value, unsigned char base)
{
 init();
 char buf[1 + 8 * sizeof(unsigned long)];
 ultoa(value, buf, base);
 *this = buf;
}

String::String(float value, unsigned char decimalPlaces)
{
 init();
 char buf[33];
 *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
}

String::String(double value, unsigned char decimalPlaces)
{
 init();
 char buf[33];
 *this = dtostrf(value, (decimalPlaces + 2), decimalPlaces, buf);
}

String::~String()
{
 free(buffer);
}





inline void String::init(void)
{
 buffer = __null;
 capacity = 0;
 len = 0;
}

void String::invalidate(void)
{
 if (buffer) free(buffer);
 buffer = __null;
 capacity = len = 0;
}

unsigned char String::reserve(unsigned int size)
{
 if (buffer && capacity >= size) return 1;
 if (changeBuffer(size)) {
  if (len == 0) buffer[0] = 0;
  return 1;
 }
 return 0;
}

unsigned char String::changeBuffer(unsigned int maxStrLen)
{
 char *newbuffer = (char *)realloc(buffer, maxStrLen + 1);
 if (newbuffer) {
  buffer = newbuffer;
  capacity = maxStrLen;
  return 1;
 }
 return 0;
}





String & String::copy(const char *cstr, unsigned int length)
{
 if (!reserve(length)) {
  invalidate();
  return *this;
 }
 len = length;
 strcpy(buffer, cstr);
 return *this;
}

String & String::copy(const __FlashStringHelper *pstr, unsigned int length)
{
 if (!reserve(length)) {
  invalidate();
  return *this;
 }
 len = length;
 strcpy_P(buffer, (const char *)pstr);
 return *this;
}


void String::move(String &rhs)
{
 if (buffer) {
  if (rhs && capacity >= rhs.len) {
   strcpy(buffer, rhs.buffer);
   len = rhs.len;
   rhs.len = 0;
   return;
  } else {
   free(buffer);
  }
 }
 buffer = rhs.buffer;
 capacity = rhs.capacity;
 len = rhs.len;
 rhs.buffer = __null;
 rhs.capacity = 0;
 rhs.len = 0;
}


String & String::operator = (const String &rhs)
{
 if (this == &rhs) return *this;

 if (rhs.buffer) copy(rhs.buffer, rhs.len);
 else invalidate();

 return *this;
}


String & String::operator = (String &&rval)
{
 if (this != &rval) move(rval);
 return *this;
}

String & String::operator = (StringSumHelper &&rval)
{
 if (this != &rval) move(rval);
 return *this;
}


String & String::operator = (const char *cstr)
{
 if (cstr) copy(cstr, strlen(cstr));
 else invalidate();

 return *this;
}

String & String::operator = (const __FlashStringHelper *pstr)
{
 if (pstr) copy(pstr, strlen_P((const char *)pstr));
 else invalidate();

 return *this;
}





unsigned char String::concat(const String &s)
{
 return concat(s.buffer, s.len);
}

unsigned char String::concat(const char *cstr, unsigned int length)
{
 unsigned int newlen = len + length;
 if (!cstr) return 0;
 if (length == 0) return 1;
 if (!reserve(newlen)) return 0;
 strcpy(buffer + len, cstr);
 len = newlen;
 return 1;
}

unsigned char String::concat(const char *cstr)
{
 if (!cstr) return 0;
 return concat(cstr, strlen(cstr));
}

unsigned char String::concat(char c)
{
 char buf[2];
 buf[0] = c;
 buf[1] = 0;
 return concat(buf, 1);
}

unsigned char String::concat(unsigned char num)
{
 char buf[1 + 3 * sizeof(unsigned char)];
 itoa(num, buf, 10);
 return concat(buf, strlen(buf));
}

unsigned char String::concat(int num)
{
 char buf[2 + 3 * sizeof(int)];
 itoa(num, buf, 10);
 return concat(buf, strlen(buf));
}

unsigned char String::concat(unsigned int num)
{
 char buf[1 + 3 * sizeof(unsigned int)];
 utoa(num, buf, 10);
 return concat(buf, strlen(buf));
}

unsigned char String::concat(long num)
{
 char buf[2 + 3 * sizeof(long)];
 ltoa(num, buf, 10);
 return concat(buf, strlen(buf));
}

unsigned char String::concat(unsigned long num)
{
 char buf[1 + 3 * sizeof(unsigned long)];
 ultoa(num, buf, 10);
 return concat(buf, strlen(buf));
}

unsigned char String::concat(float num)
{
 char buf[20];
 char* string = dtostrf(num, 4, 2, buf);
 return concat(string, strlen(string));
}

unsigned char String::concat(double num)
{
 char buf[20];
 char* string = dtostrf(num, 4, 2, buf);
 return concat(string, strlen(string));
}

unsigned char String::concat(const __FlashStringHelper * str)
{
 if (!str) return 0;
 int length = strlen_P((const char *) str);
 if (length == 0) return 1;
 unsigned int newlen = len + length;
 if (!reserve(newlen)) return 0;
 strcpy_P(buffer + len, (const char *) str);
 len = newlen;
 return 1;
}





StringSumHelper & operator + (const StringSumHelper &lhs, const String &rhs)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(rhs.buffer, rhs.len)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, const char *cstr)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!cstr || !a.concat(cstr, strlen(cstr))) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, char c)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(c)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, unsigned char num)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(num)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, int num)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(num)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, unsigned int num)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(num)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, long num)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(num)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, unsigned long num)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(num)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, float num)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(num)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, double num)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(num)) a.invalidate();
 return a;
}

StringSumHelper & operator + (const StringSumHelper &lhs, const __FlashStringHelper *rhs)
{
 StringSumHelper &a = const_cast<StringSumHelper&>(lhs);
 if (!a.concat(rhs)) a.invalidate();
 return a;
}





int String::compareTo(const String &s) const
{
 if (!buffer || !s.buffer) {
  if (s.buffer && s.len > 0) return 0 - *(unsigned char *)s.buffer;
  if (buffer && len > 0) return *(unsigned char *)buffer;
  return 0;
 }
 return strcmp(buffer, s.buffer);
}

unsigned char String::equals(const String &s2) const
{
 return (len == s2.len && compareTo(s2) == 0);
}

unsigned char String::equals(const char *cstr) const
{
 if (len == 0) return (cstr == __null || *cstr == 0);
 if (cstr == __null) return buffer[0] == 0;
 return strcmp(buffer, cstr) == 0;
}

unsigned char String::operator<(const String &rhs) const
{
 return compareTo(rhs) < 0;
}

unsigned char String::operator>(const String &rhs) const
{
 return compareTo(rhs) > 0;
}

unsigned char String::operator<=(const String &rhs) const
{
 return compareTo(rhs) <= 0;
}

unsigned char String::operator>=(const String &rhs) const
{
 return compareTo(rhs) >= 0;
}

unsigned char String::equalsIgnoreCase( const String &s2 ) const
{
 if (this == &s2) return 1;
 if (len != s2.len) return 0;
 if (len == 0) return 1;
 const char *p1 = buffer;
 const char *p2 = s2.buffer;
 while (*p1) {
  if (tolower(*p1++) != tolower(*p2++)) return 0;
 }
 return 1;
}

unsigned char String::startsWith( const String &s2 ) const
{
 if (len < s2.len) return 0;
 return startsWith(s2, 0);
}

unsigned char String::startsWith( const String &s2, unsigned int offset ) const
{
 if (offset > len - s2.len || !buffer || !s2.buffer) return 0;
 return strncmp( &buffer[offset], s2.buffer, s2.len ) == 0;
}

unsigned char String::endsWith( const String &s2 ) const
{
 if ( len < s2.len || !buffer || !s2.buffer) return 0;
 return strcmp(&buffer[len - s2.len], s2.buffer) == 0;
}





char String::charAt(unsigned int loc) const
{
 return operator[](loc);
}

void String::setCharAt(unsigned int loc, char c)
{
 if (loc < len) buffer[loc] = c;
}

char & String::operator[](unsigned int index)
{
 static char dummy_writable_char;
 if (index >= len || !buffer) {
  dummy_writable_char = 0;
  return dummy_writable_char;
 }
 return buffer[index];
}

char String::operator[]( unsigned int index ) const
{
 if (index >= len || !buffer) return 0;
 return buffer[index];
}

void String::getBytes(unsigned char *buf, unsigned int bufsize, unsigned int index) const
{
 if (!bufsize || !buf) return;
 if (index >= len) {
  buf[0] = 0;
  return;
 }
 unsigned int n = bufsize - 1;
 if (n > len - index) n = len - index;
 strncpy((char *)buf, buffer + index, n);
 buf[n] = 0;
}





int String::indexOf(char c) const
{
 return indexOf(c, 0);
}

int String::indexOf( char ch, unsigned int fromIndex ) const
{
 if (fromIndex >= len) return -1;
 const char* temp = strchr(buffer + fromIndex, ch);
 if (temp == __null) return -1;
 return temp - buffer;
}

int String::indexOf(const String &s2) const
{
 return indexOf(s2, 0);
}

int String::indexOf(const String &s2, unsigned int fromIndex) const
{
 if (fromIndex >= len) return -1;
 const char *found = strstr(buffer + fromIndex, s2.buffer);
 if (found == __null) return -1;
 return found - buffer;
}

int String::lastIndexOf( char theChar ) const
{
 return lastIndexOf(theChar, len - 1);
}

int String::lastIndexOf(char ch, unsigned int fromIndex) const
{
 if (fromIndex >= len) return -1;
 char tempchar = buffer[fromIndex + 1];
 buffer[fromIndex + 1] = '\0';
 char* temp = strrchr( buffer, ch );
 buffer[fromIndex + 1] = tempchar;
 if (temp == __null) return -1;
 return temp - buffer;
}

int String::lastIndexOf(const String &s2) const
{
 return lastIndexOf(s2, len - s2.len);
}

int String::lastIndexOf(const String &s2, unsigned int fromIndex) const
{
   if (s2.len == 0 || len == 0 || s2.len > len) return -1;
 if (fromIndex >= len) fromIndex = len - 1;
 int found = -1;
 for (char *p = buffer; p <= buffer + fromIndex; p++) {
  p = strstr(p, s2.buffer);
  if (!p) break;
  if ((unsigned int)(p - buffer) <= fromIndex) found = p - buffer;
 }
 return found;
}

String String::substring(unsigned int left, unsigned int right) const
{
 if (left > right) {
  unsigned int temp = right;
  right = left;
  left = temp;
 }
 String out;
 if (left >= len) return out;
 if (right > len) right = len;
 char temp = buffer[right];
 buffer[right] = '\0';
 out = buffer + left;
 buffer[right] = temp;
 return out;
}





void String::replace(char find, char replace)
{
 if (!buffer) return;
 for (char *p = buffer; *p; p++) {
  if (*p == find) *p = replace;
 }
}

void String::replace(const String& find, const String& replace)
{
 if (len == 0 || find.len == 0) return;
 int diff = replace.len - find.len;
 char *readFrom = buffer;
 char *foundAt;
 if (diff == 0) {
  while ((foundAt = strstr(readFrom, find.buffer)) != __null) {
   memcpy(foundAt, replace.buffer, replace.len);
   readFrom = foundAt + replace.len;
  }
 } else if (diff < 0) {
  char *writeTo = buffer;
  while ((foundAt = strstr(readFrom, find.buffer)) != __null) {
   unsigned int n = foundAt - readFrom;
   memcpy(writeTo, readFrom, n);
   writeTo += n;
   memcpy(writeTo, replace.buffer, replace.len);
   writeTo += replace.len;
   readFrom = foundAt + find.len;
   len += diff;
  }
  strcpy(writeTo, readFrom);
 } else {
  unsigned int size = len;
  while ((foundAt = strstr(readFrom, find.buffer)) != __null) {
   readFrom = foundAt + find.len;
   size += diff;
  }
  if (size == len) return;
  if (size > capacity && !changeBuffer(size)) return;
  int index = len - 1;
  while (index >= 0 && (index = lastIndexOf(find, index)) >= 0) {
   readFrom = buffer + index + find.len;
   memmove(readFrom + diff, readFrom, len - (readFrom - buffer));
   len += diff;
   buffer[len] = 0;
   memcpy(buffer + index, replace.buffer, replace.len);
   index--;
  }
 }
}

void String::remove(unsigned int index){



 remove(index, (unsigned int)-1);
}

void String::remove(unsigned int index, unsigned int count){
 if (index >= len) { return; }
 if (count <= 0) { return; }
 if (count > len - index) { count = len - index; }
 char *writeTo = buffer + index;
 len = len - count;
 strncpy(writeTo, buffer + index + count,len - index);
 buffer[len] = 0;
}

void String::toLowerCase(void)
{
 if (!buffer) return;
 for (char *p = buffer; *p; p++) {
  *p = tolower(*p);
 }
}

void String::toUpperCase(void)
{
 if (!buffer) return;
 for (char *p = buffer; *p; p++) {
  *p = toupper(*p);
 }
}

void String::trim(void)
{
 if (!buffer || len == 0) return;
 char *begin = buffer;
 while (isspace(*begin)) begin++;
 char *end = buffer + len - 1;
 while (isspace(*end) && end >= begin) end--;
 len = end + 1 - begin;
 if (begin > buffer) memcpy(buffer, begin, len);
 buffer[len] = 0;
}





long String::toInt(void) const
{
 if (buffer) return atol(buffer);
 return 0;
}

float String::toFloat(void) const
{
 return float(toDouble());
}

double String::toDouble(void) const
{
 if (buffer) return atof(buffer);
 return 0;
}
